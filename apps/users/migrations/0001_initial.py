# Generated by Django 4.0 on 2023-01-19 22:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('app_helpers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='ID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Created At', verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='updated_at')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted', verbose_name='deleted')),
                ('email', models.CharField(help_text='Email Field', max_length=256, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='email')),
                ('username', models.CharField(blank=True, help_text='Username Field', max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('first_name', models.CharField(help_text='First Name Field', max_length=256, verbose_name='first_name')),
                ('last_name', models.CharField(help_text='Last Name Field', max_length=256, verbose_name='last_name')),
                ('password', models.CharField(help_text='Password Field', max_length=512, validators=[django.core.validators.MinLengthValidator(6)], verbose_name='password')),
                ('phone_number', models.CharField(blank=True, help_text='Phone Number', max_length=256, null=True, verbose_name='phone_number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('phone_code', models.ForeignKey(blank=True, help_text='Phone Code', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_helpers.phonecode')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
        ),
    ]
